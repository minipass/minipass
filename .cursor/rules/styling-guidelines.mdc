# Tailwind CSS Styling Guidelines

## Utility Function

Always use the `cn` utility function from [lib/css.ts](mdc:lib/css.ts) for combining classes:

```typescript
import { cn } from '@/lib/css'

const className = cn('base-classes', condition && 'conditional-classes', variant && 'variant-classes')
```

## Color System

-   Use semantic color classes: `text-primary`, `bg-secondary`, `border-accent`
-   Use proper color variants: `hover:bg-primary/90`, `focus:ring-ring`
-   Use gray scale for neutral colors: `text-gray-600`, `bg-gray-50`
-   Use proper contrast: `text-white` on dark backgrounds, `text-gray-900` on light

## Spacing

-   Use consistent spacing scale: `p-4`, `m-2`, `gap-3`
-   Use responsive spacing: `p-4 lg:p-6`
-   Use proper padding for interactive elements: `px-4 py-2`

## Layout Patterns

-   Use Flexbox: `flex items-center justify-between`
-   Use Grid: `grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3`
-   Use proper container patterns: `max-w-7xl mx-auto px-4`

## Component States

-   Loading: `animate-spin`, `opacity-50`
-   Disabled: `disabled:opacity-50`, `disabled:pointer-events-none`
-   Hover: `hover:bg-accent`, `hover:text-accent-foreground`
-   Focus: `focus-visible:outline-none`, `focus-visible:ring-2`

## Button Patterns

Follow the patterns from [components/ui/button.tsx](mdc:components/ui/button.tsx):

```typescript
// Primary button
className = 'bg-primary text-primary-foreground shadow hover:bg-primary/90'

// Secondary button
className = 'bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80'

// Outline button
className = 'border border-input bg-background shadow-sm hover:bg-accent'
```

## Card Patterns

```typescript
// Basic card
className = 'rounded-lg border bg-card text-card-foreground shadow-sm'

// Interactive card
className = 'rounded-lg border bg-card hover:shadow-md transition-shadow'
```

## Form Patterns

```typescript
// Input field
className = 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background'

// Label
className = 'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'
```

## Status Colors

-   Success: `text-green-600`, `bg-green-50`, `border-green-200`
-   Warning: `text-amber-600`, `bg-amber-50`, `border-amber-200`
-   Error: `text-red-600`, `bg-red-50`, `border-red-200`
-   Info: `text-blue-600`, `bg-blue-50`, `border-blue-200`

## Responsive Design

-   Mobile first: `text-sm md:text-base lg:text-lg`
-   Breakpoints: `sm:`, `md:`, `lg:`, `xl:`, `2xl:`
-   Hide/show elements: `hidden md:block`, `block md:hidden`

## Animation

-   Use `transition-colors` for color changes
-   Use `transition-shadow` for shadow changes
-   Use `animate-spin` for loading indicators
-   Use `animate-pulse` for skeleton loading

## Accessibility

-   Use proper focus states: `focus-visible:ring-2 focus-visible:ring-ring`
-   Use proper contrast ratios
-   Use semantic HTML with proper styling
-   Use `sr-only` for screen reader only content
    description:
    globs:
    alwaysApply: true

---
